{"version":3,"sources":["components/EmployeeRow.jsx","components/Container.jsx","components/Jumbotron.jsx","components/EmployeeHeaderRow.jsx","pages/Directory.jsx","App.jsx","index.jsx"],"names":["EmployeeRow","props","className","src","employee","picture","thumbnail","alt","name","first","last","style","width","email","phone","Container","children","Jumbotron","EmployeeHeaderRow","scope","height","type","id","onClick","sortByName","placeholder","aria-label","aria-describedby","onChange","handleInputChange","value","sortByEmail","sortByPhone","escapeRegex","inputString","replace","numbersFromString","match","join","Directory","state","employees","randomUsers","results","filter","sort","order","sortBy","sortField","setState","a","b","ret","aPhoneNumber","bPhoneNumber","aFullName","toLowerCase","bFullName","e","target","this","RegExp","test","map","key","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfabccfc.chunk.js","sourcesContent":["import React from \"react\";\n// import tr from \"../components/tr\";\n// import Col from \"../components/Col\";\n\nconst EmployeeRow = (props) => {\n  return (\n    <tr>\n      {/* <Col width={1}> */}\n      <td className=\"align-middle\">\n        <img\n          src={props.employee.picture.thumbnail}\n          alt={`${props.employee.name.first} ${props.employee.name.last}`}\n          style={{width: 48}}\n        />\n      </td>\n      {/* </Col> */}\n      <td className=\"align-middle\">{`${props.employee.name.first} ${props.employee.name.last}`}</td>\n      <td className=\"align-middle\">{props.employee.email}</td>\n      <td className=\"align-middle\">{props.employee.phone}</td>\n    </tr>\n  );\n};\n\nexport default EmployeeRow;\n","import React from 'react';\n\nconst Container = (props) => {\n    return (\n        <div className=\"container\">\n            {props.children}\n        </div>\n    );\n};\n\nexport default Container;","import React from 'react';\nimport Container from './Container';\n\nconst Jumbotron = () => {\n    return (\n<div className=\"jumbotron jumbotron-fluid\">\n  <Container>\n    <h1 className=\"display-4\">Employee Directory</h1>\n    <p className=\"lead\">Sort and filter employees.</p>\n  </Container>\n</div>\n    );\n};\n\nexport default Jumbotron;","import React from \"react\";\n// import Col from \"./Col\";\n// import tr from \"./tr\";\n\nconst EmployeeHeaderRow = (props) => {\n  return (\n    <tr>\n      {/* <Col width={1}> */}\n      <th className=\"align-middle\" scope=\"col\">\n        <div style={{ width: 48, height: 48 }}></div>\n      {/* </Col> */}\n      </th>\n      <th className=\"align-middle\" scope=\"col\">\n      <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              id=\"button-addon1\"\n              onClick={props.sortByName}\n            >\n              Name\n            </button>\n          </div>\n          <input\n            name=\"name\"\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"\"\n            aria-label=\"Example text with button addon\"\n            aria-describedby=\"button-addon1\"\n            onChange={props.handleInputChange}\n            value={props.name}\n          />\n        </div>\n      </th>\n      <th className=\"align-middle\" scope=\"col\">\n      <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              id=\"button-addon1\"\n              onClick={props.sortByEmail}\n            >\n              Email\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            name=\"email\"\n            className=\"form-control\"\n            placeholder=\"\"\n            aria-label=\"Example text with button addon\"\n            aria-describedby=\"button-addon1\"\n            onChange={props.handleInputChange}\n            value={props.email}\n          />\n        </div>\n      </th>\n      <th className=\"align-middle\" scope=\"col\">\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              id=\"button-addon1\"\n              onClick={props.sortByPhone}\n            >\n              Phone\n            </button>\n          </div>\n          <input\n            name=\"phone\"\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"\"\n            aria-label=\"Example text with button addon\"\n            aria-describedby=\"button-addon1\"\n            onChange={props.handleInputChange}\n            value={props.phone}\n          />\n        </div>\n      </th>\n    </tr>\n  );\n};\n\nexport default EmployeeHeaderRow;\n","import React, { Component } from \"react\";\nimport EmployeeRow from \"../components/EmployeeRow\";\nimport Container from \"../components/Container\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport randomUsers from \"../randomuser.json\";\nimport EmployeeHeaderRow from \"../components/EmployeeHeaderRow\";\n\nconst escapeRegex = (inputString) => {\n  return inputString.replace(/([\\.\\?\\+\\*])/g, '\\\\$1');\n}\n\nconst numbersFromString = (inputString) => {\n  return (inputString.match(/\\d/g) || [\"\"]).join(\"\");\n};\nclass Directory extends Component {\n  state = {\n    employees: randomUsers.results,\n    filter: \"\",\n    sort: \"\",\n    order: \"asc\",\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n  };\n\n  sortBy = (sortField) => {\n    switch (sortField) {\n      case \"email\":\n        this.setState({\n          employees: this.state.employees.sort((a, b) => {\n            let ret = a.email < b.email ? -1 : a.email === b.email ? 0 : 1;\n            if (this.state.sort === \"email\") {\n              return this.state.order === \"asc\" ? -ret : ret;\n            } else {\n              return ret;\n            }\n          }),\n          sort: \"email\",\n          order:\n            this.state.sort === \"email\"\n              ? this.state.order === \"asc\"\n                ? \"desc\"\n                : \"asc\"\n              : \"asc\",\n        });\n        break;\n      case \"phone\":\n        this.setState({\n          employees: this.state.employees.sort((a, b) => {\n            let aPhoneNumber = numbersFromString(a.phone);\n            let bPhoneNumber = numbersFromString(b.phone);\n            let ret =\n              aPhoneNumber < bPhoneNumber\n                ? -1\n                : aPhoneNumber === bPhoneNumber\n                ? 0\n                : 1;\n            if (this.state.sort === \"phone\") {\n              return this.state.order === \"asc\" ? -ret : ret;\n            } else {\n              return ret;\n            }\n          }),\n          sort: \"phone\",\n          order:\n            this.state.sort === \"phone\"\n              ? this.state.order === \"asc\"\n                ? \"desc\"\n                : \"asc\"\n              : \"asc\",\n        });\n        break;\n      default:\n        this.setState({\n          employees: this.state.employees.sort((a, b) => {\n            let aFullName = `${a.name.first.toLowerCase()} ${a.name.last.toLowerCase()}`;\n            let bFullName = `${b.name.first.toLowerCase()} ${b.name.last.toLowerCase()}`;\n            let ret =\n              aFullName < bFullName ? -1 : aFullName === bFullName ? 0 : 1;\n            if (this.state.sort === \"name\") {\n              return this.state.order === \"asc\" ? -ret : ret;\n            } else {\n              return ret;\n            }\n          }),\n          sort: \"name\",\n          order:\n            this.state.sort === \"name\"\n              ? this.state.order === \"asc\"\n                ? \"desc\"\n                : \"asc\"\n              : \"asc\",\n        });\n        break;\n    }\n  };\n\n  handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"phone\") {\n      this.setState({\n        phone: numbersFromString(value),\n      });\n    } else {\n      // Updating the input's state\n      this.setState({\n        [name]: value,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Jumbotron />\n        <Container>\n          <table className=\"table table-striped table-hover\">\n            <thead className=\"thead-dark\">\n              <EmployeeHeaderRow\n                sortByName={() => {\n                  this.sortBy(\"name\");\n                }}\n                sortByEmail={() => {\n                  this.sortBy(\"email\");\n                }}\n                sortByPhone={() => {\n                  this.sortBy(\"phone\");\n                }}\n                handleInputChange={this.handleInputChange}\n                name={this.state.name}\n                email={this.state.email}\n                phone={this.state.phone}\n              />\n            </thead>\n            <tbody>\n              {this.state.employees\n                .filter((employee) => {\n                  return (\n                    new RegExp(escapeRegex(this.state.name), \"gi\").test(\n                      `${employee.name.first} ${employee.name.last}`\n                    ) &&\n                    new RegExp(escapeRegex(this.state.email), \"gi\").test(employee.email) &&\n                    new RegExp(escapeRegex(this.state.phone), \"g\").test(\n                      numbersFromString(employee.phone)\n                    )\n                  );\n                })\n                .map((employee) => (\n                  <EmployeeRow key={employee.email} employee={employee} />\n                ))}\n            </tbody>\n          </table>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Directory;\n","import React from 'react';\nimport Directory from './pages/Directory';\n\nfunction App() {\n  return (\n    <Directory/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}